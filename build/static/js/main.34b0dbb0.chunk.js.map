{"version":3,"sources":["components/Projects/img/goala.png","components/Projects/img/facejams.png","components/Projects/img/egg_quiz.png","components/Projects/img/fridge.png","components/NavBar/NavBar.js","components/Intro/Intro.js","components/About/About.js","components/Contact/Contact.js","components/Projects/ProjectNav/ProjectNav.js","components/Projects/ProjectCard/ProjectCard.js","components/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavBar","state","links","this","view","props","map","link","className","key","to","toUpperCase","slice","length","onClick","setView","role","React","Component","Intro","id","About","Contact","href","rel","target","ProjectNav","projects","split","word","join","ProjectCard","demoLink","codeLink","icons","image","title","description","src","alt","defaultProps","Projects","currentView","setState","exact","path","render","goala","facejams","fridge","egg_quiz","views","viewIndex","App","index","viewUp","viewDown","onKeyPressed","event","console","log","onKeyDown","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34b0dbb0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/goala.cfe213fb.png\";","module.exports = __webpack_public_path__ + \"static/media/facejams.261e6610.png\";","module.exports = __webpack_public_path__ + \"static/media/egg_quiz.578513d7.png\";","module.exports = __webpack_public_path__ + \"static/media/fridge.0d45c508.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './NavBar.css';\n\nclass NavBar extends React.Component {\n    state = {\n        links: ['/', 'projects', 'about', 'contact'],\n    }\n    render() {\n        let { links } = this.state\n        const { view } = this.props\n        links = links.map(link => {\n            if (link === view || view === '/home') {\n                return link !== '/' \n                    ? \n                    <Link className='current-link' key={link} to={`/${link}`}>{link[0].toUpperCase() + link.slice(1, link.length)}</Link>\n                    :\n                    <Link className='current-link' key={link} to='/'>Harry Chung</Link>\n            } else if (link === '/') {\n                return (\n                <Link \n                    onClick={() => this.props.setView(link)}\n                    key={link} \n                    to='/'>\n                    Harry Chung\n                </Link>)\n            } else {\n                return (\n                <Link \n                    onClick={() => this.props.setView(link)}\n                    key={link} \n                    to={`/${link}`}>\n                    {link[0].toUpperCase() + link.slice(1, link.length)}\n                </Link>\n            )}\n        })\n        return (\n            <header role=\"banner\">\n                <ul>\n                    {links}\n                </ul>\n            </header> \n        )\n    }\n}\n\nexport default NavBar;","import React from 'react';\nimport './Intro.css';\n\nclass Intro extends React.Component {\n    render() {\n        return (\n            <section className='intro' id='intro'>\n                <h2> Hi there, I’m Harry. I’m a web developer based in <br /> Los Angeles, CA</h2>\n            </section>\n        )\n    }\n}\n\nexport default Intro;","import React from 'react';\nimport './About.css';\n\nclass About extends React.Component {\n    render() {\n        return (\n            <section className='about' id='about'>\n                <p>I am a web developer and recent graduate of the Web Developer bootcamp at Bloc. I love coding because there’s something exciting about bringing a project to life. And while it may be challenging at times, I’m always learning something new!\n                <br />\n                <br />\n                    When I'm not coding, you can find me outdoors camping, playing the guitar, or practicing tae kwon do. Feel free to contact me or browse some of my projects.\n                </p>\n            </section>\n        )\n    }\n}\n\nexport default About;","import React from 'react';\nimport './Contact.css';\nimport { FaLinkedin, FaGithub, } from 'react-icons/fa';\nimport { IoMdMail } from 'react-icons/io'\n\nclass Contact extends React.Component {\n    render() {\n        return (\n            <section className='contact' id='contact'>\n                <div className=\"contact-text\">\n                    <h2>Contact Me!</h2>\n                    <p>You can reach me here:</p>\n                    <div className=\"contact-links\">\n                    <a href=\"https://github.com/CodeChung/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <FaGithub />\n                    </a>\n                    <a href=\"mailto:hc9825@gmail.com\">\n                        <IoMdMail />\n                    </a>\n                    <a href=\"https://www.linkedin.com/in/harry-h-chung/\" rel=\"noopener noreferrer\" target=\"_blank\">\n                        <FaLinkedin />\n                    </a>\n                    </div>                    \n              </div>\n            </section>\n        )\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './ProjectNav.css';\n\nclass ProjectNav extends React.Component {\n    state = {\n        projects: ['goala', 'facejams', 'fridge_friend', 'egg_quiz'],\n    }\n    render() {\n        let { projects } = this.state\n        const { view } = this.props\n        let links = projects.map(link => {\n            if (view === 'goala' && link === 'goala') {\n                return (\n                    <Link \n                        className='project-nav-link project-active project-active-left'\n                        onClick={() => this.props.setView(link)}\n                        key={link} \n                        to={`/projects/${link}`}>\n                        {link.split('_').map(word => (word[0].toUpperCase() + word.slice(1, word.length))).join(' ')}\n                    </Link>\n            \n            )}\n            if (link === view) {\n                return (\n                <Link \n                    className='project-nav-link project-active'\n                    onClick={() => this.props.setView(link)}\n                    key={link} \n                    to={`/projects/${link}`}>\n                    {link.split('_').map(word => (word[0].toUpperCase() + word.slice(1, word.length))).join(' ')}\n                </Link>\n            )} else {\n                return (\n                <Link \n                    className='project-nav-link'\n                    onClick={() => this.props.setView(link)}\n                    key={link} \n                    to={`/projects/${link}`}>\n                    {link.split('_').map(word => (word[0].toUpperCase() + word.slice(1, word.length))).join(' ')}\n                </Link>\n            )}\n        })\n        return (\n            <header className='project-navigation' role=\"banner\">\n                {links}\n            </header> \n        )\n    }\n}\n\nexport default ProjectNav;","import React from 'react';\nimport './ProjectCard.css';\n\nclass ProjectCard extends React.Component {\n    static defaultProps = {\n        demoLink: '',\n        codeLink: '',\n        icons: [],\n        image: '',\n        title: '',\n        description: '',\n    }\n    render() {\n        const { demoLink, codeLink,icons, image, title, description } = this.props\n        return (\n            <section className='project-card'>\n                <div className=\"project-description\">\n                    <h2>{title}</h2>\n                    <div className=\"project-card-block\">\n                        <img src={image} alt={`${title} project`} />\n                    </div>\n                    <div className=\"project-icons\">\n                        {icons}\n                    </div>\n                    <p>{description}</p>\n                    <button><a target=\"_blank\" rel=\"noopener noreferrer\" href={codeLink}>Code</a></button>\n                    <button><a target=\"_blank\" rel=\"noopener noreferrer\" href={demoLink}>Demo</a></button>\n                </div>\n            </section> \n        )\n    }\n}\n\nexport default ProjectCard;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './Projects.css';\nimport ProjectNav from './ProjectNav/ProjectNav';\nimport ProjectCard from './ProjectCard/ProjectCard';\nimport { DiReact, DiNodejs, DiHtml5, DiCss3, DiPostgresql, DiJqueryLogo, } from \"react-icons/di\";\nimport goala from './img/goala.png';\nimport facejams from './img/facejams.png';\nimport egg_quiz from './img/egg_quiz.png';\nimport fridge from './img/fridge.png';\n\nclass Projects extends React.Component {\n  state = {\n    currentView: 'goala'\n  }\n  setView = currentView => {\n    this.setState({ currentView })\n  }\n  render() {\n    const { currentView } = this.state\n    return (\n      <section className='projects' id='projects'>\n        <ProjectNav setView={this.setView} view={currentView} />\n        <Switch>\n          <Route \n            exact path='/projects/' \n            render={() => \n              <ProjectCard \n                setView={this.setView}\n                demoLink='https://hc9825-goala-app.now.sh'\n                codeLink='https://github.com/CodeChung/goala-client'\n                icons={[<DiReact key={0} />, <DiNodejs key={1}/>, <DiPostgresql key={2}/>, <DiHtml5 key={3}/>, <DiCss3 key={4}/>]}\n                image={goala}\n                title='Goala'\n                description='A private journal with goal and reminder tracking.'\n              />\n            }\n          />\n          <Route \n            path='/projects/goala' \n            render={() => \n              <ProjectCard \n                setView={this.setView}\n                demoLink='https://hc9825-goala-app.now.sh'\n                codeLink='https://github.com/CodeChung/goala-client'\n                icons={[<DiReact key={0} />, <DiNodejs key={1}/>, <DiPostgresql key={2}/>, <DiHtml5 key={3}/>, <DiCss3 key={4}/>]}\n                image={goala}\n                title='Goala'\n                description='A private journal with goal and reminder tracking.'\n              />\n            }\n          />\n          <Route \n            path='/projects/facejams' \n            render={() => \n              <ProjectCard \n                setView={this.setView}\n                demoLink='https://codechung-facejams-app.now.sh'\n                codeLink='https://github.com/CodeChung/facejams-client'\n                icons={[<DiReact key={0} />, <DiNodejs key={1}/>, <DiPostgresql key={2}/>, <DiHtml5 key={3}/>, <DiCss3 key={4}/>]}\n                image={facejams}\n                title='Facejams'\n                description='Convert your facial emotions into a Spotify playlist.'\n              />\n            }\n          />\n          <Route \n            path='/projects/fridge_friend' \n            render={() => \n              <ProjectCard \n                setView={this.setView}\n                demoLink='https://codechung.github.io/fridgefriend/'\n                codeLink='https://github.com/CodeChung/fridgefriend'\n                icons={[<DiJqueryLogo key={0}/>, <DiHtml5 key={1}/>, <DiCss3 key={2}/>]}\n                image={fridge}\n                title='Fridge Friend'\n                description='Get recipes from foods in fridge.'\n              />\n            }\n          />\n          <Route \n            path='/projects/egg_quiz' \n            render={() => \n              <ProjectCard \n                setView={this.setView}\n                demoLink='https://codechung.github.io/eggquiz/'\n                codeLink='https://github.com/CodeChung/eggquiz'\n                icons={[<DiJqueryLogo key={0}/>, <DiHtml5 key={1}/>, <DiCss3 key={2}/>]}\n                image={egg_quiz}\n                title='Egg Quiz'\n                description='An interactive quiz about everyone’s favorite breakfast item.'\n              />\n            }\n          />\n        </Switch>\n      </section>\n    )\n  }\n}\n\nexport default Projects;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport NavBar from './components/NavBar/NavBar';\nimport Intro from './components/Intro/Intro';\nimport About from './components/About/About';\nimport Contact from './components/Contact/Contact';\nimport Projects from './components/Projects/Projects';\n\nconst views = ['/', 'projects', 'about', 'contact'];\n\nconst viewIndex = {\n  '/': 0,\n  '/projects': 1,\n  '/about': 2,\n  '/contact': 3,\n}\n\nclass App extends React.Component {\n  state = {\n    index: 0,\n    currentView: '/'\n  }\n  setView = currentView => {\n    this.setState({ currentView })\n  }\n  viewUp = () => {\n    let { currentView, index } = this.state\n    if (index === 0) {\n      index = views.length - 1\n    } else {\n      index--\n    }\n    currentView = viewIndex[index]\n    this.setState({ index, currentView })\n  }\n  viewDown = () => {\n    let { currentView, index } = this.state\n    if (index === views.length - 1) {\n      index = 0\n    } else {\n      index++\n    }\n    currentView = viewIndex[index]\n    this.setState({ index, currentView })\n  }\n  onKeyPressed = event => {\n    console.log(event.key)\n  }\n  render() {\n    const { currentView, } = this.state\n    return (\n      <div className=\"App\"\n        onKeyDown={this.onKeyPressed}\n      >\n        <NavBar setView={this.setView} view={currentView} />\n        <main role=\"contentinfo\">\n          <Switch>\n            <Route exact path='/' component={Intro} />\n            <Route path='/projects' component={Projects} />\n            <Route path='/about' component={About} />\n            <Route path='/contact' component={Contact} />\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}